<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="google-adsense-account" content="ca-pub-7252077512047028">
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7252077512047028"
     crossorigin="anonymous"></script>
    <title>Match</title>
  <style>
    body {
  font-family: Arial, sans-serif;
  background-color: #f7f7f7;
}

.container {
  max-width: 800px;
  margin: 20px auto;
  padding: 0 20px;
  display: flex;
  flex-direction: column;
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 10px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.stats,
.select-bowler {
  flex: 1;
  margin-top: 10px;
  padding: 1rem;
  border-radius: 5px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  background-color: #ffe6e6; /* light reddish background */
  border: 1px solid #e6b8b8; /* reddish border */
}

.stats p {
  margin: 5px 0;
  color: #666;
}

.stats hr {
  margin: 1rem 0;
  border-color: #e6b8b8;
}

.select-bowler select {
  margin-top: 10px;
  padding: 0.5rem;
  width: 100%;
  border: 1px solid #e6b8b8;
  border-radius: 5px;
  background-color: #ffe6e6;
}

.select-bowler button {
  margin-top: 10px;
  padding: 0.8rem 1.6rem;
  background-color: #e73a5f;
  color: #fff;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.bat-bowl {
  display: flex;
  width: 95%;
  font-size: 13.2px;

  justify-content: space-between;
  background-color: #ffe6e6;
  padding: 10px;
  border-radius: 5px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

/* Popup styles */

.popup-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(255, 0, 0, 0.5); /* reddish overlay */
  display: none;
  justify-content: center;
  align-items: center;
}

.popup {
  background-color: #ffe6e6; /* light reddish background */
  padding: 20px;
  margin-top: 40vh;
  margin-bottom: 40vh;
  border-radius: 5px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  display: none;
}

.popup label {
  display: block;
  margin-bottom: 10px;
  color: #666; /* dark gray text */
}

.popup input[type="checkbox"] {
  margin-right: 10px;
}

.popup button {
  display: block;
  margin-top: 10px;
  padding: 0.8rem 1.6rem;
  background-color: #e73a5f; /* reddish button */
  color: #fff;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.main {
  margin-top: 10px;
  padding: 0.5rem;
  border: 1px solid #e6b8b8; /* reddish border */
  border-radius: 5px;
  background-color: whitesmoke; /* light reddish background */
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  width: 70%;
}

.circular-button {
  width: 20%;
  height: 42%;
  border-radius: 50%;
  background-color: #e73a5f; /* reddish button */
  display: flex;
  border: double #e73a5f;
  justify-content: center;
  align-items: center;
  color: #fff;
  font-weight: bold;
  cursor: pointer;
}

.circular-button:hover {
  background-color: #c0392b; /* darker reddish button */
}

@media (max-width: 500px) {
  .main {
    padding: 0.5rem;
  }

  .circular-button {
    width: 19%;
    height: 47px;
    font-size: 0.8rem;
  }
}

.wicket-button {
  margin-top: 10px;
  padding: 0.8rem 1.6rem;
  background-color: #e73a5f;
  color: #fff;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  width: 100px;
}
.retire-button{
  margin-top: 10px;
  padding: 0.8rem 1.6rem;
  background-color: #fff;
  color: #e73a5f;
  border:  double #e73a5f;
  border-radius: 5px;
  cursor: pointer;
  display: inline;
  justify-content: center;
  align-items: center;
  text-align: center;
  width: 170px;
}
.wicket-popup {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 10;
  background-color: #fff;
  border: 1px solid #ccc;
  border-radius: 5px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  padding: 10px;
  display: none;
}

.wicket-popup select {
  width: 100%;
  padding: 5px;
  border: none;
  border-radius: 5px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}
.wicket{
  width: 30%;
}
.bottom{
  width: 100%;
  display: flex;
  gap: 5px;
}
.innings-button{
  margin-top: 10px;
  padding: 0.8rem 1.6rem;
  background-color: #e73a5f;
  color: #fff;
  border:  double #e73a5f;
  border-radius: 5px;
  cursor: pointer;
  display: inline;
  justify-content: center;
  align-items: center;
  text-align: center;
  width: 300px;
}
/* Make the select and options of popup larger for mobile */
@media (max-width: 500px) {
  .wicket-popup select {
    font-size: 1.2rem;
    padding: 10px;
  }

  .wicket-popup option {
    font-size: 1.2rem;
  }

}

  </style>
</head>
<body onload="showPopup()">
  <h2>2nd Innings </h2>
    <div class="container">
        <% if (match.team2_player_batting_stats.length === 0) { %>
        <div class="popup" id="popup">
                <h2>Choose Openers</h2>
                <form action="/match/<%= match._id %>/openers2" method="post">
                    <% match.team2.forEach(player => { %>
                        <label>
                            <input type="checkbox" name="openers" value="<%= player.playerid %>">
                            <%= player.playername %>
                        </label>
                    <% }); %>
                    <select name="bowler">
                        <% match.team1.forEach(player => { %>
                            <option value="<%= player.playerid %>"><%= player.playername %></option>
                        <% }); %>
                    </select>
                    <button type="submit">Submit</button>
                </form>
        </div>
        <% } %>
       
        <div class="stats">
            <p>Total Overs: <%= match.overs %></p>
            <p>Score: <%= match.team2_runs %>/<%= match.team2_wickets %> <span>   </span> (<%= match.team2_overs %>)</p>
<hr>
     <div class="bat-bowl">
        <div class="bat">
            <p>Current Batters:</p>
            <% if (match.currentbatters.length!=0) { %>
                <p><%= match.currentbatters[0].name %> <span>  </span>  <%= match.currentbatters[0].runs %>(<%= match.currentbatters[0].balls %>)  üèè</p>
                <p><%= match.currentbatters[1].name %> <span>  </span>  <%= match.currentbatters[1].runs %>(<%= match.currentbatters[1].balls %>)</p>
            <% } %>
        </div>
        <div class="bowl">
            <p>Current Bowler:</p>
            <p> ‚öæ <%= match.currentbowler.name %> <span>   </span> <%= match.currentbowler.wickets %>-<%= match.currentbowler.runs %> (<%= match.currentbowler.overs %>)</p>
        </div>
        </div>
        </div>
       <div class="bowlingpopup">

       </div>
        <div class="select-bowler">
            Bowler :
            <form style="display: flex;" id="bowlerForm">
              <select name="bowler" onchange="sendchangebowlerData(this.value)">
                <option value="">Select Bowler</option>
                  <% match.team1.forEach(player => { %>
                      <option value="<%= player.playerid %>"><%= player.playername %></option>
                  <% }); %>
              </select>
          </form>
        </div>
        <div class="bottom">
       
        <div class="wickets">
          <button id="wicket-Button" class="wicket-button" onclick="showwicketsPopup()">
              Bowled
          </button>
          <button id="runout-Button" class="wicket-button" onclick="showRunOutPopup()">
              Run out
          </button>
          <button id="wicket-Button" class="wicket-button" onclick="showCatchPopup()">
              Catch
          </button>
      </div>
      <div class="main">
        <div class="circular-button" onclick="sendDataToServer(0)">0</div>
        <div class="circular-button" onclick="sendDataToServer(1)">1</div>
        <div class="circular-button" onclick="sendDataToServer(2)">2</div>
        <div class="circular-button" onclick="sendDataToServer(3)">3</div>
        <div class="circular-button" onclick="sendDataToServer(4)">4</div>
        <div class="circular-button" onclick="sendDataToServer(6)">6</div>
        <div class="circular-button" id="wdButton" onclick="extra('wd')">WD</div>
        <div class="circular-button" id="nbButton" onclick="extra('nb')">NB</div>
        
    </div>
      </div>
        <div class="popup-overlay" id="popupOverlay">
            <div class="popup" id="extrasPopup">
                <h2>Select Extras</h2>
                <form id="extrasForm">
                    <label for="extrasSelect">Select Extras:</label>
                    <select name="extras" id="extrasSelect">
                        <option value="0">0</option>
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                        <option value="6">6</option>
                    </select>
                    <button type="button" onclick="submitExtras()">Submit</button>
                </form>
            </div>
        </div>
        <div class="popup-overlay" id="wktpopupOverlay">
          <div class="popup" id="wiketsPopup">
              <h2>Select next batsman</h2>
              <form id="wicketsForm">
                  <label for="nextbatsmanSelect">Select Next Batsman:</label>
                  <% if (match.team2_wickets < match.team2.length-2) { %>
                    <select name="nextbatsman" id="nextbatsmanSelect">
                        <option value="" disabled selected>Choose Next Batsman</option>
                        <% match.team2.forEach(player => { %>
                            <% const isNotInBattingStats = !match.team1_player_batting_stats.some(stat => stat.id === player.playerid); %>
                            <% const isNotCurrentBatter = !match.currentbatters.some(batter => batter.id === player.playerid); %>
                            <% if (isNotInBattingStats && isNotCurrentBatter) { %>
                                <option value="<%= player.playerid %>"><%= player.playername %></option>
                            <% } %>
                        <% }); %>
                    </select>
                <% } %>
                  <button type="button" onclick="submitbatsman('<%= match.id %>')">Submit</button>
              </form>
          </div>
      </div>
      
        <div class="popup-overlay" id="runoutPopupOverlay" style="display: none;">
          <div class="popup" id="runoutPopup" style="display: none;">
              <h2>Run Out Batsman</h2>
              <form id="runoutForm">
                <p>Run Out By</p>
                <select name="runoutassist" id="runoutassist">
                    <option value="" disabled selected>Choose Run Out By</option>
                    <% match.team1.forEach(player => { %>
                        <option value="<%= player.playerid %>"><%= player.playername %></option>
                    <% }); %>
                </select>
                <p>Next Batsman</p>
                <label for="nextbatsmanSelect">Select Next Batsman:</label>
                <% if (match.team2_wickets < match.team2.length - 2) { %>
                    <select name="nextbatsman" id="nextbatsmanSelect">
                        <option value="" disabled selected>Choose Next Batsman</option>
                        <% match.team2.forEach(player => { %>
                            <% const isNotInBattingStats = !match.team1_player_batting_stats.some(stat => stat.id === player.playerid); %>
                            <% const isNotCurrentBatter = !match.currentbatters.some(batter => batter.id === player.playerid); %>
                            <% if (isNotInBattingStats && isNotCurrentBatter) { %>
                                <option value="<%= player.playerid %>"><%= player.playername %></option>
                            <% } %>
                        <% }); %>
                    </select>
                <% } else { %>
                    <select name="nextbatsman" id="nextbatsmanSelect">
                        <option value="" disabled selected>No Next Batsman Available</option>
                    </select>
                <% } %>
                <button type="button" onclick="submitRunOut('<%= match.id %>')">Submit</button>
            </form>
            
          </div>
      </div>
      <div class="popup-overlay" id="catchPopupOverlay" style="display: none;">
        <div class="popup" id="catchPopup" style="display: none;">
            <h2>Caught Out Batsman</h2>
            <form id="catchForm">
                <p>Caught By</p>
                <select name="caughtBy" id="caughtBy">
                    <option value="" disabled selected>Choose Caught By</option>
                    <% match.team1.forEach(player => { %>
                        <option value="<%= player.playerid %>"><%= player.playername %></option>
                    <% }); %>
                </select>
                <p>Next Batsman</p>
                <label for="nextBatsmanSelectCatch">Select Next Batsman:</label>
                <% if (match.team2_wickets < match.team2.length - 2) { %>
                    <select name="nextBatsman" id="nextBatsmanSelectCatch">
                        <option value="" disabled selected>Choose Next Batsman</option>
                        <% match.team2.forEach(player => { %>
                            <% const isNotInBattingStats = !match.team1_player_batting_stats.some(stat => stat.id === player.playerid); %>
                            <% const isNotCurrentBatter = !match.currentbatters.some(batter => batter.id === player.playerid); %>
                            <% if (isNotInBattingStats && isNotCurrentBatter) { %>
                                <option value="<%= player.playerid %>"><%= player.playername %></option>
                            <% } %>
                        <% }); %>
                    </select>
                <% } else { %>
                    <select name="nextBatsman" id="nextBatsmanSelectCatch">
                        <option value="" disabled selected>No Next Batsman Available</option>
                    </select>
                <% } %>
                <button type="button" onclick="submitCatch('<%= match.id %>')">Submit</button>
            </form>
        </div>
    </div>
    

    <div class="popup-overlay" id="retirePopupOverlay">
      <div class="popup" id="retirePopup">
          <h2>Select Next Batsman /h2>
          <form id="retireForm">
              <label for="retireBatsmanSelect">Select Batsman:</label>
              <select name="retireBatsman" id="retireBatsmanSelect">
                  <option value="" disabled selected>Choose Batsman</option>
                  <% match.team2.forEach(player => { %>
                      <% const isCurrentBatter = match.currentbatters.some(batter => batter.id === player.playerid); %>
                      <% if (!isCurrentBatter ) { %>
                          <option value="<%= player.playerid %>"><%= player.playername %></option>
                      <% } %>
                  <% }); %>
              </select>
              <button type="button" onclick="submitRetire('<%= match.id %>')">Submit</button>
          </form>
      </div>
  </div>
    <div  style="display: flex; justify-content: space-around;" class="btns">
    <button id="wicket-Button" class="retire-button " onclick="sendDataToServer(-1)">
      Mat Runs
  </button>
    <button id="retire-Button" class="retire-button " onclick="showRetirePopup()">
      Retire
  </button>
  </div>

  <div class="innings-over">
    <a style="text-decoration: none;" href="/match/<%= match._id %>/scorecard">
    <button class="innings-button ">
      Innings Over
    </button></a>
  </div>

    </div>
<p><%= match._id %></p>
    <script>
      
        function showPopup() {
            const popup = document.getElementById('popup');
            popup.style.display = 'block';
        }  
       
        function showExtrasPopup() {
            const popupOverlay = document.getElementById('popupOverlay');
            const extrasPopup = document.getElementById('extrasPopup');
            popupOverlay.style.display = 'flex';
            extrasPopup.style.display = 'block';
        }  
        function submitExtras() {
            const extrasForm = document.getElementById('extrasForm');
            const selectedExtras = extrasForm.elements['extras'].value;
            console.log('Selected Extras:', selectedExtras);
            // You can perform further actions here, such as sending the selected extras to the server
            // For demonstration purposes, we'll hide the popup after submission
            hideExtrasPopup();
        }   
        function hideExtrasPopup() {
            const popupOverlay = document.getElementById('popupOverlay');
            const extrasPopup = document.getElementById('extrasPopup');
            popupOverlay.style.display = 'none';
            extrasPopup.style.display = 'none';
        }   
       
        function showwicketsPopup() {
            const popupOverlay = document.getElementById('wktpopupOverlay');
            const extrasPopup = document.getElementById('wiketsPopup');
            extrasPopup.style.display = 'block';     
           popupOverlay.style.display = 'flex';
        }
        function submitbatsman(matchId) {
    const wicketsForm = document.getElementById('wicketsForm');
    let selectedBatsman;

    // Check if nextbatsman element exists in the form
    if (!wicketsForm.elements['nextbatsman']) {
      console.log("io");
      selectedBatsman = "0";
    } else {
      selectedBatsman = wicketsForm.elements['nextbatsman'].value;
    }

    console.log(selectedBatsman);

    const team1Wickets = "<%= match.team2_wickets %>";
    const team1Length = "<%= match.team2.length %>-2";

    // Check if selectedBatsman is undefined or empty
    if (!selectedBatsman && team1Wickets !== team1Length) {
        alert('Please select the next batsman');
        return;
    }

    // Set selectedBatsman to "0" if it is still undefined or empty
    if (!selectedBatsman) {
      selectedBatsman = "0";
    }

    const data = {
        type: "bowled",
        nextBatsman: selectedBatsman
    };

    axios.post(`/match/${matchId}/team2/wicket`, data)
    .then(response => {
        hidewiketsPopup();
        reload();
        // Optionally give feedback to the user
    })
}
   function hidewiketsPopup() {
            const popupOverlay = document.getElementById('wktpopupOverlay');
            const extrasPopup = document.getElementById('wiketsPopup');
            popupOverlay.style.display = 'none';
            extrasPopup.style.display = 'none';
        }
       
        function showRunOutPopup() {
    const popupOverlay = document.getElementById('runoutPopupOverlay');
    const runoutPopup = document.getElementById('runoutPopup');
    popupOverlay.style.display = 'flex';
    runoutPopup.style.display = 'block';
}
        function hideRunOutPopup() {
            const popupOverlay = document.getElementById('runoutPopupOverlay');
            const runoutPopup = document.getElementById('runoutPopup');
            popupOverlay.style.display = 'none';
            runoutPopup.style.display = 'none';
        }
        function submitRunOut(matchId) {
    const runoutForm = document.getElementById('runoutForm');
    const runoutAssist = runoutForm.elements['runoutassist'].value;
    let nextBatsman = runoutForm.elements['nextbatsman'].value;

    // Set nextBatsman to "0" if it is undefined or empty
    if (!nextBatsman) {
        nextBatsman = "0";
    }

    if (!runoutAssist) {
        alert('Please select "Run Out By"');
        return;
    }

    const data = {
        type: "runout",
        runoutAssist,
        nextBatsman
    };

    axios.post(`/match/${matchId}/team2/wicket`, data)
    .then(response => {
        console.log('Success:', response.data);
        hideRunOutPopup();
        reload();
        // Optionally give feedback to the user
    })
    .catch(error => {
        console.error('Error:', error);
        alert('An error occurred while submitting the run out. Please try again.');
    });
}
        function showCatchPopup() {
            const popupOverlay = document.getElementById('catchPopupOverlay');
            const catchPopup = document.getElementById('catchPopup');
            popupOverlay.style.display = 'flex';
            catchPopup.style.display = 'block';
        }
        function hideCatchPopup() {
            const popupOverlay = document.getElementById('catchPopupOverlay');
            const catchPopup = document.getElementById('catchPopup');
            popupOverlay.style.display = 'none';
            catchPopup.style.display = 'none';
        }
        function submitCatch(matchId) {
    const catchForm = document.getElementById('catchForm');
    const caughtBy = catchForm.elements['caughtBy'].value;
    let nextBatsman = catchForm.elements['nextBatsman'].value;

    // Set nextBatsman to "0" if it is undefined or empty
    if (!nextBatsman) {
        nextBatsman = "0";
    }

    if (!caughtBy) {
        alert('Please select who caught the ball');
        return;
    }

    const data = {
        type: "catch",
        caughtBy,
        nextBatsman
    };

    axios.post(`/match/${matchId}/team2/wicket`, data)
    .then(response => {
        console.log('Success:', response.data);
        hideCatchPopup();
        reload();
        // Optionally give feedback to the user
    })
    .catch(error => {
        console.error('Error:', error);
        alert('An error occurred while submitting the catch. Please try again.');
    });
}

        function showRetirePopup() {
        const popupOverlay = document.getElementById('retirePopupOverlay');
        const retirePopup = document.getElementById('retirePopup');
        retirePopup.style.display = 'block';     
        popupOverlay.style.display = 'flex';
    }

    function submitRetire(matchId) {
        const retireForm = document.getElementById('retireForm');
        const selectedBatsman = retireForm.elements['retireBatsman'].value;

        if (!selectedBatsman) {
            alert('Please select the batsman to retire');
            return;
        }

        const data = {
            type: "retire",
            nextbatsman: selectedBatsman
        };
        axios.post(`/match/${matchId}/team2/retire`, data)
        .then(response => {
            console.log('Success:', response.data);
            hideRetirePopup();
            reload();
            // Optionally give feedback to the user
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }

    function hideRetirePopup() {
        const popupOverlay = document.getElementById('retirePopupOverlay');
        const retirePopup = document.getElementById('retirePopup');
        popupOverlay.style.display = 'none';
        retirePopup.style.display = 'none';
    }


        const wdButton = document.getElementById('wdButton');
        const nbButton = document.getElementById('nbButton');
        wdButton.addEventListener('click', showExtrasPopup);
        nbButton.addEventListener('click', showExtrasPopup);
        function sendDataToServer(value) {
        axios.post(`/match/<%= match.id %>/team2/ball`, { value: value })
        .then(response => {
            console.log('Data sent successfully:', value);
        setTimeout(() => {
            window.location.reload();
        }, 400);
        })
        .catch(error => {
            console.error('Error sending data:', error);
            // Handle error
        });
}
        function sendchangebowlerData(playerId) {
        // Send data using Axios
        axios.post('/match/<%= match._id %>/team2/selectbowler', {
            bowler: playerId
        }).then((response)=>{
          setTimeout(() => {
      window.location.reload();
     }, 600);
        })
    }
   

    var overs = Number("<%= match.team2_overs %>");
        // if (overs%1==0) {alert("Over up choose new bowler")}
        var extratype= "wd"
        function submitExtras() {
        var extrasValue = document.getElementById('extrasSelect').value;
        axios.post('/match/<%= match._id %>/extras/team2', {
            type: extratype,
            extra: extrasValue
        })
        .then(function (response) {
          reload()
        })
    }
    function extra(type){extratype=type}
    function reload(params) {
      setTimeout(() => {
        window.location.reload()
      }, 400);
    }
   
   </script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<!-- <script src="/a.js"></script> -->
</body>
</html>
